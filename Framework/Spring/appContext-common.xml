<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- json转换器 -->
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json" />
    </bean>

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
    <context:component-scan base-package="com.groupId.business" />

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!--配置数据源 DriverManagerDataSource在每个链接请求时都会返回一个新建的链接-->
    <!--虽然DriverManagerDataSource支持多线程，但是在每次请求链接时都会创建新的链接，这是以性能为代价的-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/example"></property>
        <property name="username" value="username"></property>
        <property name="password" value="password"></property>
    </bean>

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--MyBatis-Spring系统的核心:配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引入数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--定位每个数据表对应的Data Value Object文件-->
        <property name="typeAliasesPackage" value="com.groupId.domain" />
        <!--定位每个数据表的Mapper配置文件 -->
        <property name="mapperLocations" value="classpath*:com/groupId/domain/*.xml" />
    </bean>

    <!-- 扫描每个表对应的Mapper类-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--规定其包位置及其子包-->
        <property name="basePackage" value="com.groupId.business.dao" />
    </bean>
</beans>